# simulate interactions to generate events
---

- name: restricted commands as users
  become: yes
  become_user: "{{ item }}"
  shell: |
    du /tmp
  ignore_errors: yes
  loop:
    - alice
    - carol
    - eve
    - trudy

- name: common commands as users
  become: yes
  become_user: "{{ item }}"
  shell: |
    ls /tmp
    df -h
    which nano
  ignore_errors: yes
  loop:
    - alice
    - carol
    - mallory
    - trudy

- name: common commands as users
  become: yes
  become_user: "{{ item }}"
  shell: |
    echo foo | grep foo
  ignore_errors: yes
  loop:
    - alice
    - bob
    - carol
    - dave
    - eve
    - mallory
    - trudy

- name: commands as alice
  become: yes
  become_user: alice
  shell: |
    du /tmp
  ignore_errors: yes
  loop:
    - /sbin/tcpdump
    - /usr/bin/bash
    - /usr/bin/curl
    - /usr/bin/firefox
    - /usr/bin/gcc
    - /usr/bin/grep
    - /usr/bin/python

# todo;; revisit; this should be python3 /usr/local/bin/dbadmin.py
#        but with the current rules its not rejected
- name: alice executes dbadmin.py
  become: yes
  become_user: alice
  shell: |
    /usr/local/bin/dbadmin.py
  ignore_errors: yes

- name: test developer dave
  block:
  - name: stat'ing dave's rust compiler
    become: yes
    become_user: dave
    stat:
      path: /home/dave/.cargo/bin/rustc
      checksum_algorithm: sha256
    register: rustcstat

  - name: dave tries to run rustc - should be denied
    become: yes
    become_user: dave
    shell: |
      /home/dave/.cargo/bin/rustc --version
    ignore_errors: yes

  - name: dave's rust compiler is added to the fapolicyd trust database
    become: yes
    lineinfile:
      path: /etc/fapolicyd/fapolicyd.trust
      regexp: "^/{{ rustcstat.stat.path }} "
      line: "{{ rustcstat.stat.path }} {{ rustcstat.stat.size }} {{ rustcstat.stat.checksum }}"

  - name: notify fapolicyd to perform an update of the trust database
    become: yes
    shell: |
      /usr/sbin/fapolicyd-cli --update

  - name: pause 5 seconds to allow fapolicyd to update
    pause:
      seconds: 5

  - name: dave tries to run rustc - should now be allowed
    become: yes
    become_user: dave
    shell: |
      /home/dave/.cargo/bin/rustc --version

  - name: dave saves a copy of his rust compiler
    become: yes
    become_user: dave
    copy:
      src: /home/dave/.cargo/bin/rustc
      dest: /home/dave/.cargo/bin/rustc.orig
      remote_src: yes

  - name: dave copies xz over his rust compiler, changing the bits
    become: yes
    become_user: dave
    copy:
      src: /bin/xz
      dest: /home/dave/.cargo/bin/rustc
      remote_src: yes

  - name: dave tries to run rustc that is now zx - should be denied
    become: yes
    become_user: dave
    shell: |
      /home/dave/.cargo/bin/rustc --version
    ignore_errors: yes

  - name: dave restores his rust compiler
    become: yes
    become_user: dave
    copy:
      src: /home/dave/.cargo/bin/rustc.orig
      dest: /home/dave/.cargo/bin/rustc
      remote_src: yes

  - name: dave tries to run rustc - should now be allowed again
    become: yes
    become_user: dave
    shell: |
      /home/dave/.cargo/bin/rustc --version

- name: capture events-1.txt
  become: yes
  shell: |
    journalctl -r | grep -e 'rule=\d+' | cut -d: -f4- | awk '{$1=$1};1' > /home/vagrant/events-1.txt
