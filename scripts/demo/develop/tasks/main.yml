# install development requirements, and create a build
---
- name: install development requirements common to the RedHat 8 family
  yum:
    state: present
    name:
      - bzip2
      - bzip2-devel
      - cairo
      - cairo-devel
      - cairo-gobject-devel
      - dbus-devel
      - gcc
      - git
      - gobject-introspection-devel
      - gtk3
      - mesa-dri-drivers
      - mesa-libGL
      - mesa-libGLw-devel
      - openssl-devel
      - readline-devel
      - sqlite
      - sqlite-devel
      - tk-devel
      - zlib-devel
  when:
    - ansible_facts['os_family'] == "RedHat"

- name: install development requirements specific to Fedora 34
  yum:
    state: present
    name:
      - glade
      - python3-wheel
      - python3-cairo-devel
      - python-devel
  when:
    - ansible_facts['distribution'] == "Fedora"
    - ansible_facts['distribution_major_version'] == "34"

- name: install development requirements specific to RHEL 8
  yum:
    state: present
    name:
      - python39
      - python39-wheel
      - python39-devel
      - python3-cairo
  when:
    - ansible_facts['distribution'] == "RedHat"
    - ansible_facts['distribution_major_version'] == "8"

- name: set alternatives to use python 3.9 for python3
  shell: /usr/sbin/alternatives --set python3 /usr/bin/python3.9
  when:
    - ansible_facts['distribution'] == "RedHat"
    - ansible_facts['distribution_major_version'] == "8"

- name: install rust for the vagrant user
  become: yes
  become_user: "{{ vagrant_user }}"
  shell: "curl https://sh.rustup.rs -sSf | sh -s -- -y"
  changed_when: false

- name: install pipenv for the vagrant user
  become: yes
  become_user: "{{ vagrant_user }}"
  pip:
    name: pipenv
    extra_args: --user

- name: source code checkout
  become: yes
  become_user: "{{ vagrant_user }}"
  git:
    repo: 'https://github.com/ctc-oss/fapolicy-analyzer.git'
    dest: "/shared/{{ vagrant_user }}/git/fapolicy-analyzer"

- name: create python environment
  become: yes
  become_user: "{{ vagrant_user }}"
  command: chdir="/shared/{{ vagrant_user }}/git/fapolicy-analyzer/" pipenv install --dev

- name: check if fapolicyd service exists
  stat: path=/etc/systemd/system/multi-user.target.wants/fapolicyd.service
  register: fapolicyd_service_status

- name: stop fapolicyd service
  systemd:
    name: fapolicyd
    state: stopped
  when: fapolicyd_service_status.stat.exists

- name: build the project
  become: yes
  become_user: "{{ vagrant_user }}"
  command: chdir="/shared/{{ vagrant_user }}/git/fapolicy-analyzer/" pipenv run python setup.py develop

- name: create symbolic link to shared repo
  file:
    src: "/shared/{{ vagrant_user }}/git"
    dest: "/home/{{ vagrant_user }}/git"
    owner: "{{ vagrant_user }}"
    group: "{{ vagrant_user }}"
    state: link

- name: start fapolicyd service
  systemd:
    name: fapolicyd
    state: started
  when: fapolicyd_service_status.stat.exists
