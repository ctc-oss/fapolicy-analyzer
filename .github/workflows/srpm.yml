on:
  push:
    branches:
      - 'master'
      - 'release-*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
      - 'release-*'

name: SRPM

jobs:
  build:
    name: Build ${{ matrix.triple.name }}
    strategy:
      matrix:
        triple:
          - {
            name: 'fc37',
            image: 'fedora:37',
          }
          - {
            name: 'fc38',
            image: 'fedora:rawhide',
          }
          - {
            name: 'el8',
            image: 'registry.access.redhat.com/ubi8/ubi:8.6',
          }
    runs-on: ubuntu-latest
    container: ${{ matrix.triple.image }}
    steps:
      - name: Enable Rocky AppStream and EPEL
        if: startsWith(matrix.triple.name, 'el')
        run: |
          dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
          RELEASE=$(grep -oE "[0-9]+\.[0-9]+" /etc/redhat-release) \
          && printf "[rocky-$RELEASE-appstream]\nname=Rocky Linux $RELEASE - AppStream\nbaseurl=http://dl.rockylinux.org/pub/rocky/$RELEASE/AppStream/x86_64/os/\ngpgcheck=1\nenabled=1\ngpgkey=https://dl.rockylinux.org/pub/rocky/$RELEASE/AppStream/x86_64/os/RPM-GPG-KEY-rockyofficial\nincludepkgs=rpmdevtools,dbus-devel\n" > /etc/yum.repos.d/Rocky-"$RELEASE"-AppStream.repo \
          || true

      - name: Dependencies
        run: |
          dnf install -y git gcc make rpm rpmdevtools dnf-plugins-core dbus-devel

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.58.1
          override: true

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Dependencies (.copr/Makefile)
        run: |
          make -f .copr/Makefile dnf

      - name: Strip ref to tag
        id: tag_name
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d/ -f3)

      - name: Rust dependencies
        run: |
          cargo install cargo-vendor-filterer

      # allows the git archive command to run within the repo
      - name: Add workspace as git safe directory
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Build SRPM
        run: |
          make -f .copr/Makefile srpm outdir=/tmp/archives spec=scripts/srpm/fapolicy-analyzer.spec

      - name: Rebuild SRPM
        run: |
          dnf builddep -y scripts/srpm/fapolicy-analyzer.spec
          rpmbuild --rebuild /tmp/archives/fapolicy-analyzer-*.src.rpm
          cp /github/home/rpmbuild/RPMS/x86_64/*.rpm /tmp/archives
          
          # todo;; hacking this out for now
          rm /tmp/archives/fapolicy-analyzer-debug*-*.rpm

      - name: Release Spec File
        # this only needs to be done once, so it gets done on the rhel build
        if: startsWith(github.ref, 'refs/tags/v') && startsWith(matrix.triple.name, 'el')
        run: |
          out=/tmp/archives/fapolicy-analyzer.spec
          base=https://github.com/$GITHUB_REPOSITORY/releases/download/${{ steps.tag_name.outputs.VERSION }}
          
          cp scripts/srpm/fapolicy-analyzer.spec $out
          sed -z -i -e "s#fapolicy-analyzer.tar.gz#$base/fapolicy-analyzer.tar.gz#" $out
          sed -z -i -e "s#vendor-rs.tar.gz#$base/vendor-rs%{?dist}.tar.gz#" $out
          sed -z -i -e "s#vendor-py.tar.gz#$base/vendor-py.tar.gz#" $out
        env:
          PLATFORM: ${{ matrix.triple.name }}

      - name: Export tarballs
        run: |
          mkdir -p /tmp/archives
          mv vendor-rs.tar.gz /tmp/archives/vendor-rs.$PLATFORM.tar.gz
          mv fapolicy-analyzer.tar.gz /tmp/archives
        env:
          PLATFORM: ${{ matrix.triple.name }}

      - name: Export Python tarball
        if: startsWith(matrix.triple.name, 'el')
        run: |
          mv vendor-py.tar.gz /tmp/archives

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: srpm-artifacts
          path: |
            /tmp/archives/*

      - name: Release artifacts
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ steps.tag_name.outputs.VERSION }}
          prerelease: ${{ startsWith(github.ref, 'refs/tags/v0') || contains(github.ref, 'rc') }}
          draft: true
          files: |
            /tmp/archives/*.rpm
            /tmp/archives/*.spec
            /tmp/archives/*.tar.gz
