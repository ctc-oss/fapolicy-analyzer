on:
  push:
    branches:
      - 'master'
      - 'release-*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
      - 'release-*'

name: SRPM

jobs:
  build:
    name: Build rawhide
    runs-on: ubuntu-latest
    container: fedora:rawhide
    steps:
      - name: Dependencies
        run: |
          dnf install -y git gcc rpm rpmdevtools dnf-plugins-core dbus-devel

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.58.1
          override: true

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Dependencies (.copr/Makefile)
        run: |
          make -f .copr/Makefile dnf

      - name: Strip ref to tag
        id: tag_name
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d/ -f3)

      - name: Rust dependencies
        run: |
          cargo install cargo-vendor-filterer

      # allow the git archive command to run within the repo
      - name: Allow archive
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Build SRPM
        run: |
          make -f .copr/Makefile srpm outdir=/tmp/archives spec=scripts/srpm/fapolicy-analyzer.spec

      - name: Rebuild SRPM
        run: |
          dnf builddep -y scripts/srpm/fapolicy-analyzer.spec
          rpmbuild --rebuild /tmp/archives/fapolicy-analyzer-*.src.rpm

      - name: Export tarballs
        run: |
          mkdir -p /tmp/archives
          mv crates.tar.gz /tmp/archives
          mv fapolicy-analyzer.tar.gz /tmp/archives

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: srpm-artifacts
          path: |
            /tmp/archives/*

      - name: Release artifacts
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ steps.tag_name.outputs.VERSION }}
          prerelease: ${{ startsWith(github.ref, 'refs/tags/v0') || contains(github.ref, 'rc') }}
          draft: true
          files: |
            /tmp/archives/*.rpm
