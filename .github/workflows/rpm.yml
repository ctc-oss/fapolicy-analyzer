on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
      - 'release-*'

name: Create RPM Release

jobs:
  build:
    strategy:
      matrix:
        platform: [ 'fedora:33', 'fedora:34', 'registry.access.redhat.com/ubi8/ubi:8.4' ]
    runs-on: ubuntu-latest
    container: ${{ matrix.platform }}
    name: Create RPM Release
    steps:
      - name: Enable rocky appstream if ubi
        run: |
          grep -e "^Red Hat Enterprise Linux" /etc/redhat-release \
          && RELEASE=$(grep -oE "[0-9]+\.[0-9]+" /etc/redhat-release) \
          && printf "[rocky-$RELEASE-appstream]\nname=Rocky Linux $RELEASE - AppStream\nbaseurl=http://dl.rockylinux.org/pub/rocky/$RELEASE/AppStream/x86_64/os/\ngpgcheck=1\nenabled=1\ngpgkey=https://git.rockylinux.org/label/rocky-repos/-/raw/r8/SOURCES/RPM-GPG-KEY-rockyofficial\nincludepkgs=rpmdevtools,dbus-devel\n" > /etc/yum.repos.d/Rocky-"$RELEASE"-AppStream.repo \
          || true

      - name: Install basic rpmbuild toolchain
        run: |
          dnf install -y git rpm-build rpmdevtools dnf-plugins-core python3-pip
          pip3 install --no-input jinja2-cli

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Generate package version
        id: package_version
        run: echo ::set-output name=TAG::$(./version.py)

      - name: Generate the standalone spec file from the template and args
        run: |
          mkdir -p $HOME/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
          curl -so /usr/local/bin/git-rpm-version https://raw.githubusercontent.com/peterlundgren/git-rpm-version/master/git-rpm-version
          chmod +x /usr/local/bin/git-rpm-version
          PYRPM="python3$(fgrep -q Fedora /etc/redhat-release || printf "9")"
          GIT_COMMIT="$(git describe --match "v*" --abbrev=0 --candidates=0 || git rev-parse --verify HEAD)"
          RPM_VERSION="$(git-rpm-version -v HEAD)"
          RPM_RELEASE="$(git-rpm-version -r HEAD)"
          jinja2                          \
            -D pyrpm=${PYRPM}             \
            -D git_commit=${GIT_COMMIT}   \
            -D app_version=${APP_VERSION} \
            -D rpm_version=${RPM_VERSION} \
            -D rpm_release=${RPM_RELEASE} \
            fapolicy-analyzer.spec.j2 > $HOME/rpmbuild/SPECS/fapolicy-analyzer.spec
        env:
          APP_VERSION: ${{ steps.package_version.outputs.TAG }}
        working-directory: scripts/rpm

      - name: Download package source
        run: |
          cd $HOME/rpmbuild/SOURCES
          spectool -gf ../SPECS/fapolicy-analyzer.spec

      - name: Install package build dependencies
        run: |
           cd $HOME/rpmbuild/SPECS
           dnf builddep fapolicy-analyzer.spec -y

      - name: Build the package
        run: |
           cd $HOME/rpmbuild/SPECS
           rpmbuild -ba fapolicy-analyzer.spec

      - name: Export the package
        run: |
          mv $HOME/rpmbuild/RPMS/*/*.rpm /tmp
          mv $HOME/rpmbuild/SRPMS/*.rpm  /tmp

      - name: Archive RPMs
        uses: actions/upload-artifact@v2
        with:
          name: fapolicy-analyzer-rpms
          path: /tmp/*.rpm

      - name: Strip ref to tag
        id: tag_name
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d/ -f3)

      - uses: softprops/action-gh-release@v1
        name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ steps.tag_name.outputs.VERSION }}
          tag_name: ${{ steps.tag_name.outputs.VERSION }}
          prerelease: ${{ startsWith(github.ref, 'refs/tags/v0') || contains(github.ref, 'rc') }}
          draft: true
          files: |
            /tmp/*.rpm
