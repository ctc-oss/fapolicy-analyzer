on:
  push:
    branches:
      - 'master'
      - 'release-*'
      - 'rpm/test/*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
      - 'release-*'

name: RPM

jobs:
  build:
    name: Build ${{ matrix.props.name }}
    strategy:
      matrix:
        props:
          - {
            name: 'fc37',
            spec: 'fapolicy-analyzer.spec',
            image: 'registry.fedoraproject.org/fedora:37',
            platform: 'fedora',
          }
          - {
            name: 'fc38',
            spec: 'fapolicy-analyzer.spec',
            image: 'registry.fedoraproject.org/fedora:38',
            platform: 'fedora',
          }
          - {
            name: 'el8',
            spec: 'scripts/srpm/fapolicy-analyzer.spec',
            image: 'rockylinux:8.6',
            platform: 'rhel',
          }
    runs-on: ubuntu-20.04
    container: ${{ matrix.props.image }}
    steps:
      - name: Enable EPEL
        if: startsWith(matrix.props.name, 'el')
        run: |
          dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm

      - name: Install Git
        run: dnf install -y git

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Strip ref to tag
        id: tag_name
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d/ -f3)

      - name: Ensure spec version matches tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          spec_version=$(grep "Version:" ${{ matrix.props.spec }} | tr -s ' ' | cut -d' ' -f2)
          tag="${{ steps.tag_name.outputs.VERSION }}"
          tag_version="${tag#v}"
          echo "Got version $tag_version from git tag $tag"
          
          if [[ "$tag_version" == *-rc* ]] && [[ "$spec_version" != *~rc* ]]; then
            echo ":x: The spec version ($spec_version) prerelease tag does not match the git version ($tag_version)"
            exit 1
          fi
          
          normalized_spec_version=$(echo "$spec_version" | tr "~" "-")
          if [[ ! "$tag_version" == "$normalized_spec_version" ]]; then
            echo ":x: The normalized spec version ($normalized_spec_version) does not match git version ($tag_version)"
            exit 2
          fi
          
          echo ":heavy_check_mark: The spec version $spec_version is correct"

      - name: Install dependencies
        run: |
          dnf install -y make rpm rpmdevtools dnf-plugins-core
          make -f .copr/Makefile dnf
          cargo install cargo-vendor-filterer

      # allows the git archive command to run within the repo
      - name: Add workspace as git safe directory
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Build SRPM
        run: |
          make -f .copr/Makefile srpm outdir=/tmp/archives spec=${{ matrix.props.spec }} OS_ID=${{ matrix.props.platform }}

      - name: Rebuild SRPM
        run: |
          dnf builddep -y ${{ matrix.props.spec }}
          rpmbuild --rebuild /tmp/archives/fapolicy-analyzer-*.src.rpm

      - name: Release Spec File
        # this only needs to be done once, and it needs done with the root spec file
        if: startsWith(github.ref, 'refs/tags/v') && startsWith(matrix.props.name, 'fc38')
        run: |
          out=/tmp/archives/fapolicy-analyzer.spec
          base=https://github.com/$GITHUB_REPOSITORY/releases/download/${{ steps.tag_name.outputs.VERSION }}
          
          cp ${{ matrix.props.spec }} $out
          sed -z -i -e "s#fapolicy-analyzer.tar.gz#$base/fapolicy-analyzer.tar.gz#" $out
          sed -z -i -e "s#vendor-docs.tar.gz#$base/vendor-docs.tar.gz#" $out
          sed -z -i -e "s#vendor-rs.tar.gz#$base/vendor-rs.tar.gz#" $out
          sed    -i -e "s#vendor-rs.tar.gz#vendor-rs%{?dist}.tar.gz#" $out
        env:
          PLATFORM: ${{ matrix.props.name }}

      - name: Export RPMs
        run: |
          ls | grep -v debug | xargs mv -t /tmp/archives
        working-directory: /github/home/rpmbuild/RPMS/x86_64

      - name: Export tarballs
        run: |
          mkdir -p /tmp/archives
          mv vendor-rs.tar.gz /tmp/archives/vendor-rs.$PLATFORM.tar.gz
          mv fapolicy-analyzer.tar.gz /tmp/archives
        env:
          PLATFORM: ${{ matrix.props.name }}

      - name: Upload SRPMs
        uses: actions/upload-artifact@v2
        with:
          name: srpm-artifacts
          path: |
            /tmp/archives/*.src.rpm

      - name: Upload RPMs
        uses: actions/upload-artifact@v2
        with:
          name: rpm-artifacts
          path: |
            /tmp/archives/*.x86_64.rpm

      - name: Upload tarballs
        uses: actions/upload-artifact@v2
        with:
          name: tarball-artifacts
          path: |
            /tmp/archives/*.tar.gz

      - name: Release artifacts
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ steps.tag_name.outputs.VERSION }}
          prerelease: ${{ startsWith(github.ref, 'refs/tags/v0') || contains(github.ref, 'rc') }}
          draft: true
          files: |
            /tmp/archives/*.rpm
            /tmp/archives/*.spec
            /tmp/archives/*.tar.gz
