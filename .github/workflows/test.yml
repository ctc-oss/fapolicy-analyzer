name: Test

on: 
  push:
  pull_request:

jobs:
  msys2:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - msystem: MINGW64
            arch: x86_64
          - msystem: MINGW32
            arch: i686
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: setup-msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: >-
            mingw-w64-${{ matrix.arch }}-cairo
            mingw-w64-${{ matrix.arch }}-python
            mingw-w64-${{ matrix.arch }}-python-pip
            mingw-w64-${{ matrix.arch }}-toolchain

      - name: Install dependencies
        shell: msys2 {0}
        run: |
          python -m pip install pytest coverage hypothesis

      - name: Run tests
        shell: msys2 {0}
        run: |
          export SETUPTOOLS_USE_DISTUTILS=stdlib
          export CFLAGS="-std=c90 -Wall -Wno-long-long -Werror -coverage"
          python -m coverage run --branch setup.py test
          python -m coverage xml -i
          python setup.py sdist
          python setup.py install --root="$(pwd)"/_root_abs
          python -m pip install dist/*

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  poetry:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        sudo apt-get update -q
        sudo apt-get install -y libcairo2-dev
        python -m pip install --user poetry
        poetry install

    - name: Run tests
      run: |
        poetry run python setup.py test
        poetry run mypy .

  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', 'pypy-3.7']
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        sudo apt-get update -q
        sudo apt-get install -y libcairo2-dev
        python -m pip install --upgrade setuptools
        python -m pip install --upgrade pytest flake8 sphinx sphinx_rtd_theme coverage hypothesis attrs wheel
        python -m pip install --upgrade pygame || true

    - name: Run tests
      run: |
        export CFLAGS="-Werror -coverage"
        python -m coverage run --branch setup.py test
        python -m coverage xml -i
        python -m flake8 .
        python setup.py sdist
        python setup.py bdist
        python setup.py install --root=_root
        python setup.py install --root="$(pwd)"/_root_abs
        python setup.py bdist_egg
        python setup.py bdist_wheel
        python setup.py install --root=_root_setup
        if [[ "${{ matrix.python-version }}" != "pypy-3.7" ]]; then
          python -m pip install .
        fi
        python -m sphinx -W -a -E -b html -n docs docs/_build

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  msvc:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2

      - name: Download and extract Cairo Binary
        run: |
          #TODO: Change below URL on new cairo release
          curl -L https://github.com/preshing/cairo-windows/releases/download/with-tee/cairo-windows-1.17.2.zip -o cairocomplied.zip
          7z x cairocomplied.zip
          Move-Item 'cairo-windows-*' "cairocomplied"
          tree

      - name: Set up Python ${{ matrix.python-version }} for x64
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Build x64 Build
        run: |
          $env:INCLUDE="$PWD\cairocomplied\include\"
          $env:LIB="$PWD\cairocomplied\lib\x64\"
          Copy-Item "$PWD\cairocomplied\lib\x64\cairo.dll" "cairo\cairo.dll"
          python -m pip install --upgrade pip
          python -m pip install --upgrade wheel
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade pytest flake8 sphinx sphinx_rtd_theme coverage hypothesis attrs
          python -m pip install --upgrade pygame
          python -m coverage run --branch setup.py test
          python -m coverage xml -i
          python -m flake8 .
          python setup.py sdist
          python setup.py bdist
          python setup.py install --root=_root
          python setup.py install --root="$(pwd)"/_root_abs
          python setup.py bdist_wheel
          python setup.py install --root=_root_setup
          python -m pip install .
          python -m sphinx -W -a -E -b html -n docs docs/_build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

      - name: Set up Python ${{ matrix.python-version }} for x86
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x86'

      - name: Build x86 Build
        run: |
          $env:INCLUDE="$PWD\cairocomplied\include\"
          $env:LIB="$PWD\cairocomplied\lib\x86\"
          Copy-Item "cairocomplied\lib\x86\cairo.dll" "cairo\cairo.dll"
          python -m pip install --upgrade pip
          python -m pip install --upgrade wheel
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade pytest flake8 sphinx sphinx_rtd_theme coverage hypothesis attrs
          python -m pip install --upgrade pygame
          python -m coverage run --branch setup.py test
          python -m coverage xml -i
          python -m flake8 .
          python setup.py sdist
          python setup.py bdist
          python setup.py install --root=_root
          python setup.py install --root="$(pwd)"/_root_abs
          python setup.py bdist_wheel
          python setup.py install --root=_root_setup
          python -m pip install .
          python -m sphinx -W -a -E -b html -n docs docs/_build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

      - uses: actions/upload-artifact@v2
        with:
         name: wheels-${{ matrix.python-version }}
         path: dist/pycairo*.whl

  macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies & run tests
        run: |
          brew install pkg-config || true
          brew install cairo || true
          export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"
          brew unlink python@2 || true
          brew install python || true
          python3 -m venv ../venv
          source ../venv/bin/activate
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade pytest flake8 sphinx sphinx_rtd_theme coverage hypothesis attrs wheel
          # run tests
          python -m coverage run --branch setup.py test
          python -m coverage xml -i
          python -m flake8 .
          python setup.py sdist
          python setup.py bdist
          python setup.py install --root=_root
          python setup.py install --root="$(pwd)"/_root_abs
          python setup.py bdist_egg
          python setup.py bdist_wheel
          python setup.py install --root=_root_setup
          python -m pip install .
          python -m sphinx -W -a -E -b html -n docs docs/_build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1